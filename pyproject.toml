[tool.poetry]
name = "opthub_client"
version = "0.1.0"
description = ""
authors = ["OptHub Inc. <dev@opthub.ai>"]
readme = "README.md"

[tool.ruff]
target-version = "py312"
line-length = 120
lint.select = ["ALL"]
lint.ignore = [
    "ANN101",   # Don't require type hints for self.
    "D104",     # Don't require docstrings for public packages.
    "RET504",   # Allow assignment before return
    "FBT001",   # Allow bool type positional arguments
    "TD002",    # Allow unassigned todos
    "TD003",    # Allow todos without issue
    "TRY301",   # Allow abstract `raise` to an inner function
    "DTZ005",   # Allow timezone naive datetime
    "BLE001",   # Allow builtin exceptions
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.poetry.dependencies]
python = "3.12.1"
click = "^8.1.7"
prompt-toolkit = "^3.0.43"
inquirerpy = "^0.3.4"
gql = "^3.5.0"
aiohttp = "^3.9.3"
boto3 = "^1.34"
boto3-stubs = {extras=["dynmodb","cognito"], version="^1.34"}
cryptography = "^42.0.7"
jwcrypto = "^1.5.6"
[tool.poetry.group.dev.dependencies]
ruff = "^0.4.7"
mypy = "^1.9.0"
pytest = "^8.1.1"
pyjwt = "^2.8.0"
requests = "^2.31.0"
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"









[tool.poetry.scripts]
opt = "opthub_client.opt:opt"
